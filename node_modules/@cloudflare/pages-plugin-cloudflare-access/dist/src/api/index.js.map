{
  "version": 3,
  "sources": ["../../../src/api/index.ts"],
  "sourcesContent": ["import { Identity } from \"@cloudflare/pages-plugin-cloudflare-access\";\n\nexport const getIdentity = async ({\n  jwt,\n  domain,\n}: {\n  jwt: string;\n  domain: string;\n}): Promise<undefined | Identity> => {\n  const identityURL = new URL(\"/cdn-cgi/access/get-identity\", domain);\n  const response = await fetch(identityURL.toString(), {\n    headers: { Cookie: `CF_Authorization=${jwt}` },\n  });\n  if (response.ok) return await response.json();\n};\n\nexport const generateLoginURL = ({\n  redirectURL: redirectURLInit,\n  domain,\n  aud,\n}: {\n  redirectURL: string | URL;\n  domain: string;\n  aud: string;\n}): string => {\n  const redirectURL =\n    typeof redirectURLInit === \"string\"\n      ? new URL(redirectURLInit)\n      : redirectURLInit;\n  const { hostname } = redirectURL;\n  const loginPathname = `/cdn-cgi/access/login/${hostname}?`;\n  const searchParams = new URLSearchParams({\n    kid: aud,\n    redirect_url: redirectURL.pathname + redirectURL.search,\n  });\n  return new URL(loginPathname + searchParams.toString(), domain).toString();\n};\n\nexport const generateLogoutURL = ({ domain }: { domain: string }) =>\n  new URL(`/cdn-cgi/access/logout`, domain).toString();\n"],
  "mappings": ";AAEO,IAAM,cAAc,OAAO;AAAA,EAChC;AAAA,EACA;AACF,MAGqC;AACnC,QAAM,cAAc,IAAI,IAAI,gCAAgC,MAAM;AAClE,QAAM,WAAW,MAAM,MAAM,YAAY,SAAS,GAAG;AAAA,IACnD,SAAS,EAAE,QAAQ,oBAAoB,GAAG,GAAG;AAAA,EAC/C,CAAC;AACD,MAAI,SAAS;AAAI,WAAO,MAAM,SAAS,KAAK;AAC9C;AAEO,IAAM,mBAAmB,CAAC;AAAA,EAC/B,aAAa;AAAA,EACb;AAAA,EACA;AACF,MAIc;AACZ,QAAM,cACJ,OAAO,oBAAoB,WACvB,IAAI,IAAI,eAAe,IACvB;AACN,QAAM,EAAE,SAAS,IAAI;AACrB,QAAM,gBAAgB,yBAAyB,QAAQ;AACvD,QAAM,eAAe,IAAI,gBAAgB;AAAA,IACvC,KAAK;AAAA,IACL,cAAc,YAAY,WAAW,YAAY;AAAA,EACnD,CAAC;AACD,SAAO,IAAI,IAAI,gBAAgB,aAAa,SAAS,GAAG,MAAM,EAAE,SAAS;AAC3E;AAEO,IAAM,oBAAoB,CAAC,EAAE,OAAO,MACzC,IAAI,IAAI,0BAA0B,MAAM,EAAE,SAAS;",
  "names": []
}
